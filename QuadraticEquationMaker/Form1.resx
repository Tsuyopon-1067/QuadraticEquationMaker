<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>